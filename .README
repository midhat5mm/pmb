# Server start:
cd server
npm run dev


# Hasura Start:

cd hasura
docker-compose up -d

#Initialize the migrations and metadata as per your current state:

# create migration files (note that this will only export the public schema from postgres)
# if you started hasura with HASURA_GRAPHQL_DATABASE_URL  environment variable, the database name should be default
hasura migrate create "init" --from-server --database-name default --admin-secret 'myadminsecretkey'

# mark the migration as applied in the server
hasura migrate apply --version "1650694496659" --skip-execution --database-name default

hasura migrate apply
hasura metadata apply


hasura metadata export


Apply the migrations and metadata on another instance of the GraphQL engine:
# in project dir

# apply metadata, this will connect Hasura to the configured databases.
hasura metadata apply --endpoint http://localhost:8080 --admin-secret 'myadminsecretkey'
# apply migrations to the connected databases.
hasura migrate apply --all-databases --endpoint http://localhost:8080 --admin-secret 'myadminsecretkey'
# reload metadata to make sure Hasura is aware of any newly created database objects.
hasura metadata reload --endpoint http://localhost:8080 --admin-secret 'myadminsecretkey'

hasura console --admin-secret 'myadminsecretkey'



// {
//     "table": {
//       "name": {{$body.table.name}},
//       "schema": {{$body.table.schema}}
//     },
//     "old": {{$body.event.data.old}},
//     "new": {{$body.event.data.new}}
  
//   }


//   2022-04-24T14:00:00+00:00


// mutation m {
//     update_challenge_user(where: {id: {_eq: 321}}, _set: {stop_time: "2022-05-07T14:00:00+00:00"}, ) {
//       affected_rows
//       returning {
//         challenge_id
//         completed_at_time
//         id
//         start_time
//         stop_time
//         user_id
//       }
//     }
//   }